-- MySQL Script generated by MySQL Workbench
-- Mon Dec  8 16:03:49 2014
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema social_bookmarks
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `social_bookmarks` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `social_bookmarks` ;

-- -----------------------------------------------------
-- Table `social_bookmarks`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_bookmarks`.`users` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `user_name` VARCHAR(50) NOT NULL,
  `user_password` VARCHAR(50) NOT NULL,
  `user_email` VARCHAR(255) NULL,
  `user_created_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `userid_UNIQUE` (`user_id` ASC));


-- -----------------------------------------------------
-- Table `social_bookmarks`.`posts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_bookmarks`.`posts` (
  `post_id` INT NOT NULL AUTO_INCREMENT,
  `post_url` VARCHAR(200) NOT NULL,
  `post_title` VARCHAR(255) NOT NULL,
  `post_description` VARCHAR(500) NULL,
  `post_type` VARCHAR(50) NOT NULL,
  `post_priorite` INT NOT NULL,
  `post_created_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `post_creator` INT NOT NULL,
  PRIMARY KEY (`post_id`),
  INDEX `user_id_idx` (`post_creator` ASC),
  CONSTRAINT `user_id`
    FOREIGN KEY (`post_creator`)
    REFERENCES `social_bookmarks`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `social_bookmarks`.`tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_bookmarks`.`tags` (
  `tag_id` INT NOT NULL AUTO_INCREMENT,
  `tag_name` VARCHAR(255) NOT NULL,
  `tag_parent` INT NULL,
  PRIMARY KEY (`tag_id`),
  INDEX `tag_id_idx` (`tag_parent` ASC),
  CONSTRAINT `tag_id`
    FOREIGN KEY (`tag_parent`)
    REFERENCES `social_bookmarks`.`tags` (`tag_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `social_bookmarks`.`groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_bookmarks`.`groups` (
  `group_id` INT NOT NULL AUTO_INCREMENT,
  `group_name` VARCHAR(255) NOT NULL,
  `group_creator` INT NOT NULL,
  `group_type` VARCHAR(45) NOT NULL,
  `group_created_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`group_id`),
  INDEX `user_id_idx` (`group_creator` ASC),
  CONSTRAINT `group_creator_user_id`
    FOREIGN KEY (`group_creator`)
    REFERENCES `social_bookmarks`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `social_bookmarks`.`group_members`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_bookmarks`.`group_members` (
  `group_id` INT NOT NULL,
  `member_id` INT NOT NULL,
  INDEX `user_id_idx` (`member_id` ASC),
  CONSTRAINT `group_has_user_id`
    FOREIGN KEY (`group_id`)
    REFERENCES `social_bookmarks`.`groups` (`group_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `groups_user_id`
    FOREIGN KEY (`member_id`)
    REFERENCES `social_bookmarks`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `social_bookmarks`.`votes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_bookmarks`.`votes` (
  `post_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `votes` TINYINT(1) NULL,
  INDEX `post_id_idx` (`post_id` ASC),
  INDEX `user_id_idx` (`user_id` ASC),
  CONSTRAINT `post_votes_id`
    FOREIGN KEY (`post_id`)
    REFERENCES `social_bookmarks`.`posts` (`post_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_votes__id`
    FOREIGN KEY (`user_id`)
    REFERENCES `social_bookmarks`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `social_bookmarks`.`post_tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_bookmarks`.`post_tags` (
  `post_id` INT NOT NULL,
  `tag_id` INT NOT NULL,
  INDEX `post_id_idx` (`post_id` ASC),
  INDEX `tag_id_idx` (`tag_id` ASC),
  CONSTRAINT `post_tags_id`
    FOREIGN KEY (`post_id`)
    REFERENCES `social_bookmarks`.`posts` (`post_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tag_posts_id`
    FOREIGN KEY (`tag_id`)
    REFERENCES `social_bookmarks`.`tags` (`tag_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

-- -----------------------------------------------------
-- Table `social_bookmarks`.`logs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_bookmarks`.`logs` (
  `log_id` INT NOT NULL AUTO_INCREMENT,
  `message` VARCHAR(50) NOT NULL,
  `user_created_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`log_id`),
  UNIQUE INDEX `logid_UNIQUE` (`log_id` ASC));


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
